<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RPM | Rico's Blog]]></title>
  <link href="http://hgomez.github.com/blog/categories/rpm/atom.xml" rel="self"/>
  <link href="http://hgomez.github.com/"/>
  <updated>2012-10-15T11:43:46+02:00</updated>
  <id>http://hgomez.github.com/</id>
  <author>
    <name><![CDATA[Henri Gomez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Batch rpm signing]]></title>
    <link href="http://hgomez.github.com/blog/2011/12/28/batch-rpm-signing/"/>
    <updated>2011-12-28T18:05:42+01:00</updated>
    <id>http://hgomez.github.com/blog/2011/12/28/batch-rpm-signing</id>
    <content type="html"><![CDATA[<p>I'm using <a href="http://jenkins-ci.org/">Jenkins</a> to build RPMs with free-style scripts.</p>

<p>Decent RPM packager should sign his RPMs so they could be checked by yum/zypper tools.</p>

<p>Here you could be in trouble since rpm signing require a password to be passed in command line :</p>

<p><code>bash
rpm --addsign -D "_signature gpg" -D "_gpg_name packagers@myforge.org" RPMS/noarch/myjenkins-1.0.0-1.noarch.rpm&lt;br /&gt;
Enter pass phrase:&lt;br /&gt;
</code></p>

<p>It's quite problematic for a RPM build factory.</p>

<p>After digging around Internet, best solution appears to be using <a href="http://expect.sourceforge.net/">expect</a> and I developped a simple script for such purpose with following constraints :</p>

<ul>
<li><p>packager gpg name should be parametized (to avoid injecting it in ~/.rpmmacros)</p></li>
<li><p>gpg passphrase should be provided to command line (could be read from a secret file)</p></li>
</ul>


<p>```bash</p>

<h1>!/usr/bin/expect -f</h1>

<p>#</p>

<h1>rpmsign-batch.expect : expect powered rpm signing command</h1>

<p>#</p>

<p>proc usage {} {</p>

<pre><code>    send_user "Usage: rpmsign-batch.expect gpgname passphrase rpmfile\n\n"
    exit
</code></pre>

<p>}</p>

<p>if {[llength $argv]!=3} usage</p>

<p>set gpgname [lrange $argv 0 0]
set passphrase [lrange $argv 1 1]
set rpmfile [lrange $argv 2 2]</p>

<p>send_user "passphrase=$passphrase gpgname=$gpgname\n"</p>

<p>spawn rpm --addsign -D "<em>signature gpg" -D "</em>gpg_name $gpgname" $rpmfile
expect -exact "Enter pass phrase: "
send -- "$passphrase\r"
expect eof
```</p>

<p>You could then use it to sign rpms from your freestyle jobs like :</p>

<p>```bash</p>

<h1>Password provided in clear in job (weird)</h1>

<p>rpmsign-batch.expect packagers@myforge.org mypassphrase RPMS/noarch/myjenkins-1.0.0-1.noarch.rpm</p>

<h1>Password grabbed from a secret file (better)</h1>

<p>PASSPHRASE=<code>cat /my/secret-passphrase-file</code>
rpmsign-batch.expect packagers@myforge.org $PASSPHRASE RPMS/noarch/myjenkins-1.0.0-1.noarch.rpm
```</p>
]]></content>
  </entry>
  
</feed>
