<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: developpement | Rico's Blog]]></title>
  <link href="http://hgomez.github.com/blog/categories/developpement/atom.xml" rel="self"/>
  <link href="http://hgomez.github.com/"/>
  <updated>2012-09-30T18:33:10+02:00</updated>
  <id>http://hgomez.github.com/</id>
  <author>
    <name><![CDATA[Henri Gomez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Computer Archeology - Resurrect Jonama]]></title>
    <link href="http://hgomez.github.com/blog/2010/01/08/computer-archeology-resurrect-jonama/"/>
    <updated>2010-01-08T22:09:42+01:00</updated>
    <id>http://hgomez.github.com/blog/2010/01/08/computer-archeology-resurrect-jonama</id>
    <content type="html"><![CDATA[<p>A long time ago, in a not so distant galaxy, I wrote a SSL relay, named <a href="http://membres.multimania.fr/jonama/">Jonama</a>.</p>

<p>This SSL relay was used in-house for some specifics applications and was working with a glitch since 1999.</p>

<p>This week, we upgraded our web servers to new boxes running Suse SLES 11.
And as expected, the relay didn't work anymore since Suse SLES 11 came with OpenSSL 0.9.8k, so I had to do some archeology.</p>

<p>Native C code, RPM specfiles, autoconf and figure what changed in recent OpenSSL.</p>

<p>Here is the result, saved here in my blog.</p>

<p><a href="/bin-contents/jonama-1.1.5-0.src.rpm">jonama-1.1.5-0.src.rpm</a></p>

<p><a href="/bin-contents/jonama-1.1.5.tar.gz">jonama-1.1.5.tar.gz</a></p>

<p>For those interested on Jonama, a copy from my original site :</p>

<p><a href="/wp-content/uploads/2011/12/jonama.gif"><img src="/wp-content/uploads/2011/12/jonama.gif" alt="Logo de Jonama" /></a></p>

<p><strong>What's this ?</strong></p>

<hr />

<p><strong>Jonama </strong>is a piece of software acting as a relay between a client over the Net and your internal systems.</p>

<p>It was developped which security in mind :</p>

<ul>
<li><p>Use of SSL protocol to identify remotes and crypt channels.</p></li>
<li><p>Use of Unix mechanisms like chroot and setuid, to minimize rights and actions.</p></li>
</ul>


<p><strong>Why ?</strong></p>

<hr />

<p>I was looking for an SSL relay but each implementation (sslwrap, stunnel, bjorb) didn't support CA mode and load-balancing.</p>

<p>Since I work on RPM for mod_ssl, I decided to grab parts of this software to start my very own SSL relay.</p>

<p>Today, June 1999, stunnel also support CA mode ;-)</p>

<p><strong>Current Features</strong></p>

<hr />

<p>As of version 1.1.x :</p>

<ul>
<li><p>Stand-alone server (no use of inetd wrapper).</p></li>
<li><p>SSL v2/v3/TLS 1 via OpenSSL/SSLeay.</p></li>
<li><p>Multiples services proxying (ie telnet, imap, pop).</p></li>
<li><p>CA mode for reject of clients without valid certificates (SSLeay CA.sh).</p></li>
<li><p>Services could use multiples remotes servers, with automatic backup .</p></li>
<li><p>Relaying control via ACL Date/Time.</p></li>
<li><p>Free software.</p></li>
</ul>


<p><strong>What are the necessary step after installing jonama ?</strong></p>

<hr />

<ul>
<li><p>run <strong>jmca</strong> to build your CA certificate.</p></li>
<li><p>run <strong>jgenscert</strong> to build proxy certificate</p></li>
<li><p>run now <strong>jmca</strong> to build users certificates</p></li>
</ul>


<p>Since all <strong>Jonama </strong>configuration files are put under the <strong>/etc/jonama/conf</strong> directory, I create there one (or more) ssl sub-directories where I put all needed CA's file .</p>

<p><strong>For security concern, be sure the directory will be restricted to root access and files only readable by root !!!.</strong></p>

<p><strong>I'm not using RPM based system, what initialization step needed ?</strong></p>

<hr />

<ul>
<li><p>Modify makefile to follow your system (ssl lib location..)</p></li>
<li><p><strong>make install</strong><strong> </strong>(jmca and jgenscrt are executed)</p></li>
</ul>


<p><strong>I allready have a real www certificate, Can I use it ?</strong></p>

<hr />

<p>Yes but only for proxy identification. You must be your own custom ca to handle clients certs generations.</p>

<p>But you are free to use you www certificate (pem encoded) to identify your proxy to your clients, instead of using a self signed certificate.
To use your web certificate (generated by Thawte for example), simply replace the self genarated certificate (created by <strong>jgencert</strong>), <strong>/etc/jonama/conf/ssl/server.crt</strong> and private key <strong>/etc/jonama/conf/ssl/private/server.key</strong> by your web certificate and key :</p>

<p><strong>cp wwwserver.pem /etc/jonama/conf/ssl.crt/server.crt</strong>
<strong>cp wwwkey.pem /etc/jonama/conf/ssl.key/server.key</strong></p>

<p><strong>How to remove the pass-phrase from my private key ?</strong></p>

<hr />

<p>Thinking that Jonama can provide a different CA for the different services, you could want avoid entering the pass-phrase for each private key .  ****</p>

<p><strong>openssl rsa -in key1.key -out key2.key </strong>(<a href="http://www.psy.uq.oz.au/~ftp/Crypto/#remove%20a%20passphrase%20from%20a%20private%20key">SSLeay FAQ</a>)</p>
]]></content>
  </entry>
  
</feed>
